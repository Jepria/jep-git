<project name="Jep Ria Report Module Building" default="build">
  <taskdef resource="net/sf/antcontrib/antlib.xml" />
  <property file="local.properties" />
  <property environment="env" />
  <if>
    <isset property="env.BIN_HOME" />
    <then>
      <property name="BIN_HOME" value="${env.BIN_HOME}" />
    </then>
  </if>
  <if>
    <isset property="BIN_HOME" />
    <then>
      <echo message="Binary repository path: ${BIN_HOME}" />        
    </then>
    <else>
      <fail message="Binary repository path not specified. Specify it either in environment variable %BIN_HOME% or use -DBIN_HOME=... command line argument." />
    </else>
  </if>
  <property file="build.properties"/>
  <property file="dependency.properties"/>
  
  <property name="MODULE_PACKAGE" value="com/technology/${PROJECT_NAME_IN_PACKAGE}/${MODULE_NAME_IN_PACKAGE}" />
  <property name="RESOURCE_HOME" value="src/resources/${MODULE_PACKAGE}" />
  <property name="JAVA_DOC_DIR" value="../Doc/App/AutoGen" />

  <property name="LOG_LEVEL" value="info" />

  <path id="libs">
    <pathelement location="${JEPRIA_LIB}" />
    <pathelement location="${GWT_USER_LIB}" />
    <pathelement location="${EJB30_LIB}" />
    <pathelement location="${OC4J-JTA_LIB}" />
    <pathelement location="${OC4J-INTERNAL_LIB}" />
    <pathelement location="${JAZNCORE_LIB}" />
    <pathelement location="${OJDBC14DMS_LIB}" />
    <pathelement location="${LOG4J_LIB}" />
    <pathelement location="${JASPERREPORTS_LIB}" />
  </path>
  
  <fileset id="class-jar" dir="build">
    <include name="**/*.class" />
  </fileset>

  <fileset id="src-jar" dir="src/java">
    <include name="**/client/**/*.java" />
    <include name="**/shared/**/*.java" />
    <include name="**/images/*.png" />
    <include name="**/images/*.gif" />
    <include name="**/${MODULE_NAME}Text.properties" />
    <include name="**/${MODULE_NAME}Text_??.properties" />
    <include name="**/log4j.properties" />
  </fileset>
  
  <fileset id="font-jar" dir="src/resources\com\technology\jep\jepreport\fonts">
    <include name="fonts.xml" />
    <include name="jasperreports_extension.properties" />
    <include name="*.ttf" />
  </fileset>

  <!-- Проверка наличия всех используемых библиотек (зависимостей) -->
  <target name="check-dependencies" >
    <propertyselector
        property="pack.list"
        delimiter=","
        match="([^\s]+(\_(?i)(lib|jslib))$)"
        select="\1"
        casesensitive="false" />
                 
    <echo message="Dependency checking..."/>
    <for list="${pack.list}" param="lib-path">
      <sequential>
        <if> <available file="${@{lib-path}}"/>
          <then/>
          <else>
            <echo>Required library '${@{lib-path}}' is absent</echo>
            <property name="DEPENDENCY_ABSENCE" value="true" />
          </else>
        </if>
      </sequential>
    </for>
    <if> <equals arg1="${DEPENDENCY_ABSENCE}" arg2="true" />
      <then>
        <echo>Dependency checking failed</echo>
        <fail message="BINARY REPOSITORY PROBABLY SHOULD BE UPDATED"/>
      </then>
    </if>
    <echo message="Dependency checking succeeded"/>
  </target>

  <target name="start-log" depends="check-dependencies">
    <mkdir dir="log" />
      <tstamp>
        <format property="timestamp" pattern="yyyyMMdd_HHmmss"/>
      </tstamp>
      <dirname property="pdir" file="." />
        <basename property="version" file="${pdir}" />
        <record name="log/${timestamp}-${MODULE_NAME}-${version}-${PROJECT_NAME}.txt" loglevel="${LOG_LEVEL}" />
  </target>

  <target name="text-resources-update-check" depends="start-log">
    <uptodate targetfile="src/java/${MODULE_PACKAGE}/shared/text/${MODULE_NAME}Text.properties" property="text-resources-is-uptodate">
      <srcfiles dir="src/java/${MODULE_PACKAGE}/shared/text" includes="*.properties"/>
    </uptodate>
  </target>
        
  <target name="encode-text-resources" depends="text-resources-update-check" unless="text-resources-is-uptodate">
    <native2ascii encoding="UTF-8" src="src/java/${MODULE_PACKAGE}/shared/text" dest="src/java/${MODULE_PACKAGE}/shared/text"
      ext=".target_properties" includes="**/*_Source.properties" />
    <move file="src/java/${MODULE_PACKAGE}/shared/text/${MODULE_NAME}Text_Source.target_properties" 
      tofile="src/java/${MODULE_PACKAGE}/shared/text/${MODULE_NAME}Text.properties"/>
  </target>

<!--  <target name="compile-java" depends="encode-text-resources" unless="text-resources-is-uptodate"> -->
  <target name="compile-java">
    <mkdir dir="build" />
    <javac srcdir="src/java" destdir="build" debug="on" encoding="utf-8" includeantruntime="false" >
      <classpath refid="libs" />
    </javac>
  </target>

  <target name="jar-update-check" depends="compile-java">
    <uptodate targetfile="${DISTR_DIR}/${DISTR_NAME}.jar" property="jar-is-uptodate">
      <srcfiles refid="class-jar" />
      <srcfiles refid="src-jar" />
    </uptodate>
  </target>
        
  <target name="jar" depends="jar-update-check" unless="jar-is-uptodate">
    <jar destfile="${DISTR_DIR}/${DISTR_NAME}.jar">
      <fileset refid="class-jar" />
      <fileset refid="src-jar" />
      <fileset refid="font-jar" />
    </jar>
  </target>
  
  <target name="ejb-jar-update-check" depends="compile-java">
    <uptodate targetfile="${DISTR_DIR}/${DISTR_NAME}-ejb.jar" property="ejb-jar-is-uptodate">
      <srcfiles dir="build" includes="**/*Bean*.class" />
    </uptodate>
  </target>
        
  <target name="ejb-jar" depends="ejb-jar-update-check" unless="ejb-jar-is-uptodate">
    <jar destfile="${DISTR_DIR}/${DISTR_NAME}-ejb.jar" basedir="build" includes="**/*Bean*.class" />
  </target>
  
  <target name="build" depends="jar, ejb-jar"/>

  <target name="doc" depends="start-log">
    <javadoc sourcepath="src/java" 
      packagenames="*" 
      overview="src/java/${MODULE_PACKAGE}/overview.html" 
      destdir="${JAVA_DOC_DIR}"
      encoding="UTF-8"
      docencoding="UTF-8"
      charset="UTF-8">
      <classpath refid="libs" />
    </javadoc>
  </target>

  <target name="clean" depends="start-log">
    <delete file="${DISTR_DIR}/${DISTR_NAME}-ejb.jar"/>
    <delete file="${DISTR_DIR}/${DISTR_NAME}.jar"/>
    
    <delete includeemptydirs="true">
      <fileset dir="build"/>
      <fileset dir="src/java" includes="**/${MODULE_NAME}Text.java"/>
    </delete>
  </target>
</project>