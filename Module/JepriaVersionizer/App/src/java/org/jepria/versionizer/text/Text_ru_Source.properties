# Common
optRecoverErrorOrSkip=Пофиксить ошибку вручную (r) или пропустить поиск overview-файлов в этом модуле (s)?
reqRecoverError=Пофиксите ошибку вручную

# ScenarioInitialConfig
mc_willModuleBeAPartOfVersion=Будет ли модуль %s участвовать в версии?
mc_enterModuleRootPath=Введите корневой путь модуля %s (директория с поддиректорией 'App')
mc_enterTargetVersionForModule=Введите название выпускаемой версии для модуля %s
mc_pathDoesNotRepresentADirectoryTryAnother=Путь '%s' не является директорией, введите другой путь
mc_pathDoesNotRepresentADirectoryWithAChildDirectoryAppTryAnother=Директория '%s' не содержит поддиректорию 'App', введите другой путь
mc_pathCannotBeParsedTryAnother=Путь '%s' не распознан, введите другой

# SearchOverviewFiles
sof_msgError=Ошибка при поиске overview-файлов
sof_msgOverviewFilesFoundNone=В модуле не найдено overview-файлов
sof_msgOverviewFilesFoundSingle=Найден overview-файл '%s'
sof_msgOverviewFilesFoundMultiple=Найдено несколько overview-файлов
sof_optOverviewAutoGenerate=Сгенерировать overview.html автоматически по пути '%s' (a), создать файл вручную (m) или пропустить работу с overview для этого модуля (s)?
sof_reqGenerateOverviewManually=Создайте файл overview.html с базовой структурой вручную

# WriteReleaseNotes
wrn_msgError=Ошибка при записи релизноутсов в файл '%s'
wrn_msgReleaseNotesBlockNotFound=В файле %s не найден блок releaseNotes
wrn_optReleaseNotesBlockManualCreate=Создать вручную блок releaseNotes (m) или пропустить добавление релизноутсов в файл '%s' (s)?
wrn_reqReleaseNotesBlockManualCreate=Создайте вручную пустой блок releaseNotes в файле '%s'
wrn_msgReleaseNotesExist=Релизноутсы для версии %s уже написаны в файле '%s'
wrn_optReleaseNotesExistUpdate=Перезаписать существующие релизноутсы автоматически (a), вручную (m) или пропустить добавление релизноутсов в файл '%s' (s)?
wrn_reqReleaseNotesExistWriteManually=Вручную перезапишите существующие релизноутсы для версии %s в файле '%s'
wrn_msgAddReleaseNotesSuccess=Релизноутсы для версии %s успешно добавлены в файл '%s'

# VCS
vcs_obtainCommitMessagesSinceTheLastVersion=%s: Введите сообщения коммитов начиная с последней версии, каждое с новой строки.\nВводимые коммиты должны относиться только к модулю %s (%s).\nВ конце введите "end".
vcsGit_commitVersion=Сделайте коммит тега в git относительно модуля %s (%s): -m "docs(%s): Версия %s"
vcsGit_commit=Сделайте обычный коммит в git относительно модуля %s (%s): -m "chore(%s): %s"
vcsGit_pull=Сделайте git pull в репозитории с модулем %s (%s)
vcsGit_push=Сделайте git push в репозитории с модулем %s (%s)
vcsSvn_synchronize=Синхронизируйте svn: модуль %s (%s)
vcsSvn_commitVersion=Сделайте коммит версии в svn (в Trunk и в новую ветку в Tag/%s) относительно модуля %s (%s): -m "[+] Версия %s"
vcsSvn_commit=Сделайте обычный коммит в svn (в Trunk) относительно модуля %s (%s): -m "[*] %s"

#Test Driver
td_reqTest=Запускайте тесты модуля %s до полного прохождения

#Basic Scenario common
bs_synchronizeBothBinaryRepositories=Синхронизируйте оба бинарных репозитория (внешний и внутренний)
bs_addBinariesForTheModuleIntoBothBinaryRepositories=Добавьте бинарники для модуля %s в оба репозитория: -m"%s"
bs_publishOnTheSourceforge=Опубликуйте пост на Соурсфордже:\nЗаголовок:\n%s\n\nТекст:\n%s
bs_haveModuleSourcesBeenChangedSinceTheLastBuild=Изменялись ли исходники проекта %s после последней сборки?
bs_setBuildPropertiesAndNecessaryDependenciesToTargetVersion=%s: Настройте build.properties и необходимые зависимости на версию (production)
bs_setBuildPropertiesAndNecessaryDependenciesToTheNextSnapshot=%s: Настройте build.properties и необходимые зависимости на очередной снепшот (debug)
bs_runAntCleanBuildAndDoc=%s: Запустите ant clean, build и doc
bs_createZIPArchiveAndPlaceItIntoTheSharedFolder=%s: Создайте ZIP архив (включая App/lib, если нужно) и поместите его в шару