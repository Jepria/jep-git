<project default="jar">
  <taskdef resource="net/sf/antcontrib/antlib.xml" />
  <property file="local.properties" />
  <property environment="env" />
  <if>
    <isset property="env.BIN_HOME" />
    <then>
      <property name="BIN_HOME" value="${env.BIN_HOME}" />
    </then>
  </if>
  <if>
    <isset property="BIN_HOME" />
    <then>
      <echo message="Binary repository path: ${BIN_HOME}" />        
    </then>
    <else>
      <fail message="Binary repository path not specified. Specify it either in environment variable %BIN_HOME% or use -DBIN_HOME=... command line argument." />
    </else>
  </if>
  <property file="dependency.properties" />
  <property file="build.properties" />
  <property name="MODULE_PACKAGE" value="com/technology/${PROJECT_NAME_IN_PACKAGE}/${MODULE_NAME_IN_PACKAGE}" />
  <property name="JAVA_DOC_DIR" value="../Doc/App/AutoGen" />
  <property name="LIBS"
    value="${env.ANT_HOME}/lib/ant.jar;classes;${FREEMARKER_LIB};${JAVAPARSER-CORE_LIB};${XERCESIMPL_LIB};${JEPRIA_LIB}"/>

  <property name="LOG_LEVEL" value="info" />
  
  <fileset id="class-jar" dir="classes">
    <include name="**/*.class" />
  </fileset>

  <!-- Проверка наличия всех используемых библиотек (зависимостей) -->
  <target name="check-dependencies" >
    <propertyselector
        property="pack.list"
        delimiter=","
        match="([^\s]+(\_(?i)(lib|jslib))$)"
        select="\1"
        casesensitive="false" />
                 
    <echo message="Dependency checking..."/>
    <for list="${pack.list}" param="lib-path">
      <sequential>
        <if> <available file="${@{lib-path}}"/>
          <then/>
          <else>
            <echo>Required library '${@{lib-path}}' is absent</echo>
            <property name="DEPENDENCY_ABSENCE" value="true" />
          </else>
        </if>
      </sequential>
    </for>
    <if> <equals arg1="${DEPENDENCY_ABSENCE}" arg2="true" />
      <then>
        <echo>Dependency checking failed</echo>
        <fail message="BINARY REPOSITORY PROBABLY SHOULD BE UPDATED"/>
      </then>
    </if>
    <echo message="Dependency checking succeeded"/>
  </target>
  
  <target name="start-log" depends="check-dependencies">        
    <mkdir dir="log" />
      <tstamp>
        <format property="timestamp" pattern="yyyyMMdd_HHmmss"/>
      </tstamp>
      <dirname property="pdir" file="." />
      <basename property="version" file="${pdir}" />
      <record name="log/${timestamp}-${MODULE_NAME}-${version}-${PROJECT_NAME}.txt" loglevel="${LOG_LEVEL}" />        
  </target>
  
  <target name="compile" depends="start-log">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="classes"/>      
    </delete>
    <mkdir dir="classes" />
    <javac srcdir="src/java" destdir="classes" classpath="${LIBS}" debug="on" encoding="utf-8" target="1.5" includeantruntime="false" />      
  </target>

  <target name="jar-update-check" depends="compile">
    <uptodate targetfile="${DISTR_DIR}/${DISTR_NAME}.jar" property="jar-is-uptodate">
      <srcfiles refid="class-jar" />
    </uptodate>
  </target>
        
  <target name="jar" depends="jar-update-check" unless="jar-is-uptodate">
    <echo message="Distr = ${DISTR_DIR}/${DISTR_NAME}.jar"/>
    <jar destfile="${DISTR_DIR}/${DISTR_NAME}.jar">
      <fileset refid="class-jar" />
      <fileset dir="src" includes="templates/**"/>
      <fileset dir="src/java" includes="**/*.properties"/>
      <fileset dir="src/java" includes="**/*.ftl"/>
    </jar>
  </target>

  <target name="doc" depends="start-log">
        <javadoc 
          Doctitle="${MODULE_NAME} API Reference" 
          Windowtitle="${MODULE_NAME} JavaDoc" 
          access="private" 
          additionalparam="-notimestamp" 
          charset="UTF-8" 
          destdir="${JAVA_DOC_DIR}" 
          docencoding="UTF-8" 
          encoding="UTF-8" 
          includenosourcepackages="true" 
          overview="src/java/${MODULE_PACKAGE}/overview.html" 
          packagenames="*" 
          sourcepath="src/java" classpath="${LIBS}" />
  </target>
        
  <target name="clean">
    <delete includeemptydirs="true">
      <fileset dir="log"/>      
    </delete>
  </target>

  <target name="cleanClasses">
    <!--
    <delete includeemptydirs="true">
      <fileset dir="classes" includes="**/*"/>      
    </delete>
    /-->
  </target>

  <target name="cleanJar">
    <delete includeemptydirs="true">
      <fileset dir="${DISTR_DIR}" includes="${DISTR_NAME}.jar"/>      
    </delete>
  </target>
</project>
